diff -up Heimdall-v1.4.2/heimdall/source/BridgeManager.cpp.5~ Heimdall-v1.4.2/heimdall/source/BridgeManager.cpp
--- Heimdall-v1.4.2/heimdall/source/BridgeManager.cpp.5~	2020-07-13 21:15:59.904759962 +0200
+++ Heimdall-v1.4.2/heimdall/source/BridgeManager.cpp	2020-07-13 21:15:59.905760159 +0200
@@ -544,7 +544,7 @@ bool BridgeManager::BeginSession(void)
 
 	BeginSessionPacket beginSessionPacket;
 
-	if (!SendPacket(&beginSessionPacket))
+	if (!SendPacket(&beginSessionPacket, kDefaultTimeoutSend, kEmptyTransferNone))
 	{
 		Interface::PrintError("Failed to begin session!\n");
 		return (false);
@@ -567,7 +567,7 @@ bool BridgeManager::BeginSession(void)
 
 		FilePartSizePacket filePartSizePacket(fileTransferPacketSize);
 
-		if (!SendPacket(&filePartSizePacket))
+		if (!SendPacket(&filePartSizePacket, kDefaultTimeoutSend, kEmptyTransferNone))
 		{
 			Interface::PrintError("Failed to send file part size packet!\n");
 			return (false);
@@ -594,7 +594,7 @@ bool BridgeManager::EndSession(bool rebo
 	Interface::Print("Ending session...\n");
 
 	EndSessionPacket *endSessionPacket = new EndSessionPacket(EndSessionPacket::kRequestEndSession);
-	bool success = SendPacket(endSessionPacket);
+	bool success = SendPacket(endSessionPacket, kDefaultTimeoutSend, kEmptyTransferNone);
 	delete endSessionPacket;
 
 	if (!success)
@@ -620,7 +620,7 @@ bool BridgeManager::EndSession(bool rebo
 		Interface::Print("Rebooting device...\n");
 
 		EndSessionPacket *rebootDevicePacket = new EndSessionPacket(EndSessionPacket::kRequestRebootDevice);
-		bool success = SendPacket(rebootDevicePacket);
+		bool success = SendPacket(rebootDevicePacket, kDefaultTimeoutSend, kEmptyTransferNone);
 		delete rebootDevicePacket;
 
 		if (!success)
@@ -641,6 +641,16 @@ bool BridgeManager::EndSession(bool rebo
 			return (false);
 		}
 	}
+    else
+    {
+        Interface::Print("Resetting USB device...\n");
+
+        int result = libusb_reset_device(deviceHandle);
+        if (result != LIBUSB_SUCCESS)
+        {
+            Interface::PrintError("libusb error %d while resetting device.", result);
+        }
+    }
 
 	return (true);
 }
@@ -815,7 +825,7 @@ bool BridgeManager::ReceivePacket(Inboun
 bool BridgeManager::RequestDeviceType(unsigned int request, int *result) const
 {
 	DeviceTypePacket deviceTypePacket;
-	bool success = SendPacket(&deviceTypePacket);
+	bool success = SendPacket(&deviceTypePacket, kDefaultTimeoutSend, kEmptyTransferNone);
 
 	if (!success)
 	{
@@ -843,7 +853,7 @@ bool BridgeManager::SendPitData(const Pi
 
 	// Start file transfer
 	PitFilePacket *pitFilePacket = new PitFilePacket(PitFilePacket::kRequestFlash);
-	bool success = SendPacket(pitFilePacket);
+	bool success = SendPacket(pitFilePacket, kDefaultTimeoutSend, kEmptyTransferNone);
 	delete pitFilePacket;
 
 	if (!success)
@@ -864,7 +874,7 @@ bool BridgeManager::SendPitData(const Pi
 
 	// Transfer file size
 	FlashPartPitFilePacket *flashPartPitFilePacket = new FlashPartPitFilePacket(pitBufferSize);
-	success = SendPacket(flashPartPitFilePacket);
+	success = SendPacket(flashPartPitFilePacket, kDefaultTimeoutSend, kEmptyTransferNone);
 	delete flashPartPitFilePacket;
 
 	if (!success)
@@ -892,7 +902,7 @@ bool BridgeManager::SendPitData(const Pi
 
 	// Flash pit file
 	SendFilePartPacket *sendFilePartPacket = new SendFilePartPacket(pitBuffer, pitBufferSize);
-	success = SendPacket(sendFilePartPacket);
+	success = SendPacket(sendFilePartPacket, kDefaultTimeoutSend, kEmptyTransferNone);
 	delete sendFilePartPacket;
 
 	delete [] pitBuffer;
@@ -915,7 +925,7 @@ bool BridgeManager::SendPitData(const Pi
 
 	// End pit file transfer
 	EndPitFileTransferPacket *endPitFileTransferPacket = new EndPitFileTransferPacket(pitBufferSize);
-	success = SendPacket(endPitFileTransferPacket);
+	success = SendPacket(endPitFileTransferPacket, kDefaultTimeoutSend, kEmptyTransferNone);
 	delete endPitFileTransferPacket;
 
 	if (!success)
@@ -945,7 +955,7 @@ int BridgeManager::ReceivePitFile(unsign
 
 	// Start file transfer
 	PitFilePacket *pitFilePacket = new PitFilePacket(PitFilePacket::kRequestDump);
-	success = SendPacket(pitFilePacket);
+	success = SendPacket(pitFilePacket, kDefaultTimeoutSend, kEmptyTransferNone);
 	delete pitFilePacket;
 
 	if (!success)
@@ -975,7 +985,7 @@ int BridgeManager::ReceivePitFile(unsign
 	for (unsigned int i = 0; i < transferCount; i++)
 	{
 		DumpPartPitFilePacket *requestPacket = new DumpPartPitFilePacket(i);
-		success = SendPacket(requestPacket);
+		success = SendPacket(requestPacket, kDefaultTimeoutSend, kEmptyTransferNone);
 		delete requestPacket;
 
 		if (!success)
@@ -1019,7 +1029,7 @@ int BridgeManager::ReceivePitFile(unsign
 
 	// End file transfer
 	pitFilePacket = new PitFilePacket(PitFilePacket::kRequestEndTransfer);
-	success = SendPacket(pitFilePacket);
+	success = SendPacket(pitFilePacket, kDefaultTimeoutSend, kEmptyTransferNone);
 	delete pitFilePacket;
 
 	if (!success)
@@ -1075,7 +1085,7 @@ bool BridgeManager::SendFile(FILE *file,
 	}
 
 	FileTransferPacket *flashFileTransferPacket = new FileTransferPacket(FileTransferPacket::kRequestFlash);
-	bool success = SendPacket(flashFileTransferPacket);
+	bool success = SendPacket(flashFileTransferPacket, kDefaultTimeoutSend, kEmptyTransferNone);
 	delete flashFileTransferPacket;
 
 	if (!success)
@@ -1125,7 +1135,7 @@ bool BridgeManager::SendFile(FILE *file,
 		unsigned int sequenceTotalByteCount = sequenceSize * fileTransferPacketSize;
 
 		FlashPartFileTransferPacket *beginFileTransferPacket = new FlashPartFileTransferPacket(sequenceTotalByteCount);
-		success = SendPacket(beginFileTransferPacket);
+		success = SendPacket(beginFileTransferPacket, kDefaultTimeoutSend, kEmptyTransferNone);
 		delete beginFileTransferPacket;
 
 		if (!success)
diff -up Heimdall-v1.4.2/heimdall/source/BridgeManager.h.5~ Heimdall-v1.4.2/heimdall/source/BridgeManager.h
--- Heimdall-v1.4.2/heimdall/source/BridgeManager.h.5~	2020-07-13 21:15:59.905760159 +0200
+++ Heimdall-v1.4.2/heimdall/source/BridgeManager.h	2020-07-13 21:16:51.697977962 +0200
@@ -82,7 +82,7 @@ namespace Heimdall
 			enum
 			{
 				kDefaultTimeoutEmptyTransfer = 100,
-				kDefaultTimeoutSend = 3000,
+				kDefaultTimeoutSend = 6000,
 				kDefaultTimeoutReceive = kDefaultTimeoutSend, //3000,
 			};
 
